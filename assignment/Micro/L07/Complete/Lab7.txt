Lab7

จากโค้ดโปรแกรม EX01 จงตอบคำถามต่อไปนี้                                 1. **โค้ดบรรทัดที่ 1 และ 2:** กำหนดพินควบคุม DC Motor
2. **โค้ดบรรทัดที่ 12:** อ่านค่าสถานะจากสวิตช์
3. **โค้ดบรรทัดที่ 13 ถึง 17:** ทำให้มอเตอร์หมุนตามเข็มเมื่อกดสวิตช์
4. **โค้ดบรรทัดที่ 18 ถึง 22:** หยุดมอเตอร์เมื่อไม่กดสวิตช์
5. **เมื่อกดสวิตช์ค้างไว้:** DC Motor จะ **หมุนตามเข็ม**

จากโค้ดโปรแกรม EX02 จงตอบคำถามต่อไปนี้                             1. **โค้ดบรรทัดที่ 22 ถึง 26:** ทำให้มอเตอร์หมุนทิศทางหนึ่งเมื่อกด `SW1`
2. **โค้ดบรรทัดที่ 27 ถึง 31:** ทำให้มอเตอร์หมุนทิศทางตรงข้ามเมื่อกด `SW2`
3. **โค้ดบรรทัดที่ 32 ถึง 36:** ทำให้มอเตอร์หยุดหมุนเมื่อกด `SW3`

จากโค้ดโปรแกรม EX03 จงตอบคำถามต่อไปนี้                                   1. **โค้ดบรรทัดที่ 31 ถึง 37:** มอเตอร์ 1 หมุนทิศทางหนึ่งเมื่อกด `SW1`
2. **โค้ดบรรทัดที่ 38 ถึง 44:** มอเตอร์ 1 หมุนทิศทางตรงข้ามเมื่อกด `SW2`
3. **โค้ดบรรทัดที่ 45 และ 51:** มอเตอร์ 1 หยุดหมุนเมื่อกด `SW3`
4. **โค้ดบรรทัดที่ 52 ถึง 58:** มอเตอร์ 2 หยุดหมุนเมื่อกด `SW4`

จากโค้ดโปรแกรม EX04 จงตอบคำถามต่อไปนี้                                        1. **โค้ดบรรทัดที่ 2:** สร้างอ็อบเจ็กต์สำหรับควบคุมพอร์ตขยาย
2. **โค้ดบรรทัดที่ 5:** เริ่มต้นการทำงานของ `PCF8574`
3. **โค้ดบรรทัดที่ 6 ถึง 13:** กำหนดพอร์ตทั้งหมดเป็น OUTPUT
4. **โค้ดบรรทัดที่ 17:** เปิด LED ที่พอร์ต `P0`
5. **โค้ดบรรทัดที่ 18:** ปิด LED ที่พอร์ต `P0`

จากโค้ดโปรแกรม EX05 จงตอบคำถามต่อไปนี้                                     1. **โค้ดบรรทัดที่ 10 และ 11:** กำหนดพอร์ต `P0` ถึง `P7` เป็น OUTPUT และตั้งค่าเป็น LOW
2. **โค้ดบรรทัดที่ 15 และ 20:** เปิด LED ทีละตัวจาก `P0` ถึง `P7`
3. **โค้ดบรรทัดที่ 21 และ 26:** ปิด LED ทีละตัวจาก `P0` ถึง `P7`

จากโค้ดโปรแกรม EX06 จงตอบคำถามต่อไปนี้                             1. **โค้ดบรรทัดที่ 10 และ 11:** กำหนดพอร์ต `P0` ถึง `P7` เป็น OUTPUT
2. **โค้ดบรรทัดที่ 12 ถึง 13:** กำหนดพอร์ต `P0` ถึง `P3` เป็น INPUT
3. **โค้ดบรรทัดที่ 19 ถึง 27:** ตรวจสอบการกดสวิตช์ที่ `P0` และสลับสถานะ LED

จากโค้ดโปรแกรม EX07 จงตอบคำถามต่อไปนี้                             สรุปหน้าที่ของแต่ละโค้ด:

1. **โค้ดบรรทัดที่ 2 และ 3:** สร้างอ็อบเจ็กต์สำหรับควบคุม PCF8574 จำนวน 2 ตัว
2. **โค้ดบรรทัดที่ 6 และ 7:** เริ่มการทำงานของ PCF8574 ทั้งสองตัว
3. **โค้ดบรรทัดที่ 21 ถึง 26:** เปิดและปิด LED ที่เชื่อมต่อกับพอร์ต `P0` ถึง `P7` ของ PCF8574 ตัวแรก ทีละตัวพร้อมหน่วงเวลา
4. **โค้ดบรรทัดที่ 27 ถึง 32:** เปิดและปิด LED ที่เชื่อมต่อกับพอร์ต `P0` ถึง `P7` ของ PCF8574 ตัวที่สอง ทีละตัวพร้อมหน่วงเวลา


จากโค้ดโปรแกรม EX08 จงตอบคำถามต่อไปนี้                                สรุปหน้าที่ของแต่ละโค้ด:

1. **โค้ดบรรทัดที่ 11:** อ่านค่าจาก PIR Sensor และเก็บค่าไว้ในตัวแปร `pir_val`

2. **โค้ดบรรทัดที่ 12 ถึง 21:** ถ้า PIR Sensor ตรวจพบการเคลื่อนไหว (`pir_val == HIGH`), จะทำให้ Buzzer ส่งเสียงดัง 3 ครั้ง พร้อมกับหน่วงเวลาในแต่ละครั้ง


จากโค้ดโปรแกรม EX09 จงตอบคำถามต่อไปนี้                               สรุปหน้าที่ของแต่ละโค้ด:

1. **โค้ดบรรทัดที่ 10 ถึง 14:** ถ้า PIR Sensor ตรวจพบการเคลื่อนไหว (`pir_val == HIGH`), จะแสดงข้อความ "Found Something" บน Serial Monitor และหน่วงเวลา 2 วินาที

2. **โค้ดบรรทัดที่ 15 ถึง 18:** ถ้า PIR Sensor ไม่ตรวจพบการเคลื่อนไหว (`pir_val != HIGH`), จะแสดงข้อความ "-" บน Serial Monitor และหน่วงเวลา 300 มิลลิวินาที


จากโค้ดโปรแกรม EX10 จงตอบคำถามต่อไปนี้สรุปหน้าที่ของแต่ละโค้ด:

1. *โค้ดบรรทัดที่ 18 ถึง 24:* ถ้า Sound Sensor ตรวจจับเสียงได้ (sound_val == HIGH), จะทำให้ LED ติดสีแดง และหน่วงเวลา 2 วินาที

2. *โค้ดบรรทัดที่ 25 ถึง 30:* ถ้า Sound Sensor ไม่ตรวจจับเสียง (sound_val != HIGH), จะทำให้ LED ติดสีเขียว


จากโค้ดโปรแกรม EX11 จงตอบคำถามต่อไปนี้                            สรุปหน้าที่ของแต่ละโค้ด:

1. **โค้ดบรรทัดที่ 10 ถึง 14:** ถ้า Sound Sensor ตรวจจับเสียงได้ (`sound_val == HIGH`), จะแสดงข้อความ "Heard Something" บน Serial Monitor และหน่วงเวลา 2 วินาที

2. **โค้ดบรรทัดที่ 15 ถึง 18:** ถ้า Sound Sensor ไม่ตรวจจับเสียง (`sound_val != HIGH`), จะแสดงข้อความ "-" บน Serial Monitor



จากโค้ดโปรแกรม EX12 จงตอบคำถามต่อไปนี้                            1. **โค้ดบรรทัดที่ 11:** อ่านค่าสถานะจาก Gas Sensor
2. **โค้ดบรรทัดที่ 12 ถึง 21:** ถ้าตรวจพบแก๊ส Buzzer จะส่งเสียงเตือน 3 ครั้ง


จากโค้ดโปรแกรม EX13 จงตอบคำถามต่อไปนี้                         สรุปหน้าที่ของแต่ละโค้ด:

1. **โค้ดบรรทัดที่ 10 ถึง 14:** ถ้า Gas Sensor ตรวจพบแก๊ส (`gas_val == HIGH`), จะแสดงข้อความ "Found GAS/SMOKE" บน Serial Monitor และหน่วงเวลา 2 วินาที

2. **โค้ดบรรทัดที่ 15 ถึง 18:** ถ้า Gas Sensor ไม่ตรวจพบแก๊ส (`gas_val != HIGH`), จะแสดงข้อความ "#" บน Serial Monitor



จากโค้ดโปรแกรม EX14 จงตอบคำถามต่อไปนี้                             สรุปหน้าที่ของแต่ละโค้ด:

1. **โค้ดบรรทัดที่ 15:** ใช้ฟังก์ชัน `map()` เพื่อแปลงค่าที่อ่านจากเซ็นเซอร์น้ำ (0-1023) เป็นระดับน้ำ (0-100)

2. **โค้ดบรรทัดที่ 16 ถึง 20:** ถ้าระดับน้ำเปลี่ยนแปลง (`temp != level`), จะตั้งตำแหน่ง cursor และแสดงระดับน้ำใหม่บนจอ LCD

3. **โค้ดบรรทัดที่ 22:** อัปเดตค่า `temp` ให้เท่ากับ `level` เพื่อติดตามการเปลี่ยนแปลงระดับน้ำ



Ex15                                         สรุปหน้าที่ของแต่ละโค้ด:

1. *โค้ดบรรทัดที่ 12:* แปลงค่าอ่านจากเซ็นเซอร์น้ำ (0-1023) เป็นระดับน้ำ (0-100) ด้วยฟังก์ชัน map()

2. *โค้ดบรรทัดที่ 13:* แสดงผลระดับน้ำบน Serial Monitor